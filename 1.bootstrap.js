(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var clusterize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clusterize.js */ \"./node_modules/clusterize.js/clusterize.js\");\n/* harmony import */ var clusterize_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(clusterize_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _artentus_jam1emu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @artentus/jam1emu */ \"./node_modules/@artentus/jam1emu/jam1emu_lib.js\");\n/* harmony import */ var xterm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! xterm */ \"./node_modules/xterm/lib/xterm.js\");\n/* harmony import */ var xterm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(xterm__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var ace_builds_src_noconflict_ace__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ace-builds/src-noconflict/ace */ \"./node_modules/ace-builds/src-noconflict/ace.js\");\n/* harmony import */ var ace_builds_src_noconflict_ace__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(ace_builds_src_noconflict_ace__WEBPACK_IMPORTED_MODULE_3__);\n\r\n\r\n\r\n\r\n\r\n__webpack_require__(/*! ace-builds/src-noconflict/theme-monokai */ \"./node_modules/ace-builds/src-noconflict/theme-monokai.js\");\r\n\r\nace_builds_src_noconflict_ace__WEBPACK_IMPORTED_MODULE_3__[\"define\"](\r\n    \"ace/mode/jam1asm_highlight_rules\",\r\n    [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"],\r\n    function(require, exports, module) {\r\n        \"use strict\";\r\n\r\n        var oop = require(\"../lib/oop\");\r\n        var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\n        var Jam1AsmHighlightRules = function() {\r\n            this.$rules = {\r\n                start: [\r\n                    {\r\n                        token: 'keyword.directive.jam1asm',\r\n                        regex: '\\\\.[a-zA-Z_][a-zA-Z0-9_]*',\r\n                    },\r\n                    {\r\n                        token: 'keyword.instruction.jam1asm',\r\n                        regex: '\\\\b((nop)|(mov)|(inc)|(incc)|(dec)|(in)|(out)|(break)|(lodsb)|(stosb)|(call)|(ret)|(callbd)|(retbd)|(jmp)|(jo)|(jno)|(js)|(jns)|(jz)|(jnz)|(je)|(jne)|(jc)|(jnc)|(jnae)|(jb)|(jae)|(jnb)|(jbe)|(jna)|(ja)|(jnbe)|(jl)|(jnge)|(jge)|(jnl)|(jle)|(jng)|(jg)|(jnle)|(jlc)|(jnlc)|(push)|(pop)|(clc)|(shl)|(shr)|(add)|(addc)|(addac)|(sub)|(subb)|(subae)|(and)|(or)|(xor)|(not)|(cmp)|(test))\\\\b',\r\n                        caseInsensitive: true\r\n                    },\r\n                    {\r\n                        token: 'constant.numeric.jam1asm',\r\n                        regex: '\\\\b([0-9][a-zA-Z0-9_]*)\\\\b',\r\n                    },\r\n                    {\r\n                        token: 'string.quoted.double.jam1asm',\r\n                        regex: '\"',\r\n                        push: [\r\n                            {\r\n                                token: 'constant.language.escape.jam1asm',\r\n                                regex: '\\\\\\\\(x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|.)',\r\n                            },\r\n                            {\r\n                                token: 'string.quoted.double.jam1asm',\r\n                                regex: '\"',\r\n                                next: 'pop'\r\n                            },\r\n                            {\r\n                                token: 'string.quoted.double.jam1asm',\r\n                                regex: '$',\r\n                                next: 'pop'\r\n                            },\r\n                            {\r\n                                token: 'string.quoted.double.jam1asm',\r\n                                regex: '.',\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        token: 'comment.line.jam1asm',\r\n                        regex: '//|\\\\;',\r\n                        push: [\r\n                            {\r\n                                token: 'comment.line.jam1asm',\r\n                                regex: '$',\r\n                                next: 'pop'\r\n                            },\r\n                            {\r\n                                token: 'comment.line.jam1asm',\r\n                                regex: '.',\r\n                            },\r\n                        ]\r\n                    },\r\n                ]\r\n            };\r\n            this.normalizeRules();\r\n        };\r\n\r\n        Jam1AsmHighlightRules.metaData = {\r\n            fileTypes: ['asm', 'inc'],\r\n            name: 'jam1asm',\r\n            scopeName: 'source.jam1asm'\r\n        };\r\n\r\n        oop.inherits(Jam1AsmHighlightRules, TextHighlightRules);\r\n        exports.Jam1AsmHighlightRules = Jam1AsmHighlightRules;\r\n    }\r\n);\r\n\r\nace_builds_src_noconflict_ace__WEBPACK_IMPORTED_MODULE_3__[\"define\"](\r\n    \"ace/mode/jam1asm\",\r\n    [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/jam1asm_highlight_rules\"],\r\n    function(require, exports, module) {\r\n        \"use strict\";\r\n\r\n        var oop = require(\"../lib/oop\");\r\n        var TextMode = require(\"./text\").Mode;\r\n        var Jam1AsmHighlightRules = require(\"./jam1asm_highlight_rules\").Jam1AsmHighlightRules;\r\n\r\n        //var FoldMode = require(\"./folding/coffee\").FoldMode;\r\n\r\n        var Mode = function () {\r\n            this.HighlightRules = Jam1AsmHighlightRules;\r\n            //this.foldingRules = new FoldMode();\r\n            this.$behaviour = this.$defaultBehaviour;\r\n        };\r\n\r\n        oop.inherits(Mode, TextMode);\r\n\r\n        (function () {\r\n            this.lineCommentStart = [\"//\", \";\"];\r\n            this.$id = \"ace/mode/jam1asm\";\r\n        }).call(Mode.prototype);\r\n        exports.Mode = Mode;\r\n    }\r\n);                \r\n\r\n(function() {\r\n    ace_builds_src_noconflict_ace__WEBPACK_IMPORTED_MODULE_3__[\"require\"]([\"ace/mode/jam1asm\"], function(m) {\r\n        if ( true && typeof exports == \"object\" && module) {\r\n            module.exports = m;\r\n        }\r\n    });\r\n})();\r\n\r\nconst codeEditor = ace_builds_src_noconflict_ace__WEBPACK_IMPORTED_MODULE_3__[\"edit\"](\"code_editor\");\r\ncodeEditor.setTheme(\"ace/theme/monokai\");\r\ncodeEditor.session.setMode(\"ace/mode/jam1asm\");\r\n\r\nconst term = new xterm__WEBPACK_IMPORTED_MODULE_2__[\"Terminal\"]({ scrollback: 10000, cols: 60, rows: 20 });\r\nterm.open(document.getElementById('output_terminal_parent'));\r\n\r\nconst frameRate = 59.94047619047765; // VGA 60Hz\r\nconst millisecondsPerFrame = 1000 / frameRate;\r\n\r\nconst screenWidth = 640;\r\nconst screenHeight = 480;\r\n\r\nconst terminalParent = document.getElementById('terminal_parent');\r\nconst mainRight = document.getElementById('main_right');\r\nconst controls = document.getElementById('controls');\r\nconst registerView = document.getElementById('register_view');\r\nconst memoryView = document.getElementById('memory_view');\r\nconst memoryScrollArea = document.getElementById('memory_scroll_area');\r\nconst mainEditor = document.getElementById('main_editor');\r\nconst assemblerOutput = document.getElementById(\"assembler_output\");\r\nconst canvas = document.getElementById('canvas');\r\nconst ctx2d = canvas.getContext('2d');\r\nconst system = _artentus_jam1emu__WEBPACK_IMPORTED_MODULE_1__[\"System\"].create();\r\n\r\nconst filePicker = document.getElementById(\"file_picker\");\r\nconst runButton = document.getElementById(\"run_button\");\r\nconst singleStepButton = document.getElementById(\"single_step_button\");\r\nconst frameStepButton = document.getElementById(\"frame_step_button\");\r\nconst resetButton = document.getElementById(\"reset_button\");\r\nconst regs16BitText = document.getElementById(\"regs_16_bit_text\");\r\nconst regs8BitText = document.getElementById(\"regs_8_bit_text\");\r\nconst flagsText = document.getElementById(\"flags_text\");\r\nconst assembleButton = document.getElementById(\"assemble_button\");\r\n\r\nlet running = false;\r\nlet currentTime = undefined;\r\nlet elapsed = 0;\r\n\r\nfunction update_vga() {\r\n    let framebuffer = system.framebuffer();\r\n    let image = new ImageData(framebuffer, screenWidth, screenHeight);\r\n    ctx2d.putImageData(image, 0, 0);\r\n}\r\n\r\nfunction update_16_bit_regs() {\r\n    const pc = system.pc().toString(16).toUpperCase().padStart(4, \"0\");\r\n    const ra = system.ra().toString(16).toUpperCase().padStart(4, \"0\");\r\n    const sp = system.sp().toString(16).toUpperCase().padStart(4, \"0\");\r\n    const si = system.si().toString(16).toUpperCase().padStart(4, \"0\");\r\n    const di = system.di().toString(16).toUpperCase().padStart(4, \"0\");\r\n    const tx = system.tx().toString(16).toUpperCase().padStart(4, \"0\");\r\n    regs16BitText.innerText = `PC: ${pc}\\nRA: ${ra}\\nSP: ${sp}\\nSI: ${si}\\nDI: ${di}\\nTX: ${tx}`;\r\n}\r\n\r\nfunction update_8_bit_regs() {\r\n    const a = system.a().toString(16).toUpperCase().padStart(2, \"0\");\r\n    const b = system.b().toString(16).toUpperCase().padStart(2, \"0\");\r\n    const c = system.c().toString(16).toUpperCase().padStart(2, \"0\");\r\n    const d = system.d().toString(16).toUpperCase().padStart(2, \"0\");\r\n    const tl = system.tl().toString(16).toUpperCase().padStart(2, \"0\");\r\n    const th = system.th().toString(16).toUpperCase().padStart(2, \"0\");\r\n    regs8BitText.innerText = `A:  ${a}\\nB:  ${b}\\nC:  ${c}\\nD:  ${d}\\nTL: ${tl}\\nTH: ${th}`;\r\n}\r\n\r\nfunction update_flags() {\r\n    const flags = system.flags();\r\n    const f = (flags & 0x20) !== 0 ? \"1\" : \"0\";\r\n    const l = (flags & 0x10) !== 0 ? \"1\" : \"0\";\r\n    const c = (flags & 0x08) !== 0 ? \"1\" : \"0\";\r\n    const z = (flags & 0x04) !== 0 ? \"1\" : \"0\";\r\n    const s = (flags & 0x02) !== 0 ? \"1\" : \"0\";\r\n    const o = (flags & 0x01) !== 0 ? \"1\" : \"0\";\r\n    flagsText.innerText = `${f} ${l} ${c} ${z} ${s} ${o}`;\r\n}\r\n\r\nconst memoryClusterize = new clusterize_js__WEBPACK_IMPORTED_MODULE_0___default.a({\r\n    rows: [],\r\n    scrollId: \"memory_scroll_area\",\r\n    contentId: \"memory_content_area\",\r\n    rows_in_block: 100,\r\n});\r\n\r\nfunction update_memory_view() {\r\n    const memoryView = system.memory_view();\r\n\r\n    let lines = [];\r\n    for (let addr = 0; addr <= 0xFFFF; addr += 16) {\r\n        let str = \"<div style='margin: 0px 8px'>\"\r\n        str += addr.toString(16).toUpperCase().padStart(4, \"0\");\r\n        str += \" |\";\r\n\r\n        for (let offset = 0; offset < 16; offset++) {\r\n            str += \" \";\r\n            str += memoryView[addr + offset].toString(16).toUpperCase().padStart(2, \"0\");\r\n        }\r\n\r\n        str += \"</div>\";\r\n        lines.push(str);\r\n    }\r\n\r\n    memoryClusterize.update(lines);\r\n}\r\n\r\nfunction update() {\r\n    update_vga();\r\n    update_16_bit_regs();\r\n    update_8_bit_regs();\r\n    update_flags();\r\n    update_memory_view();\r\n}\r\n\r\nfunction toggle_run() {\r\n    running = !running;\r\n    elapsed = 0;\r\n    runButton.innerText = running ? \"Pause\" : \"Run\";\r\n    filePicker.disabled = running;\r\n    singleStepButton.disabled = running;\r\n    frameStepButton.disabled = running;\r\n    assembleButton.disabled = running;\r\n    update();\r\n}\r\n\r\nfunction pause() {\r\n    running = false;\r\n    elapsed = 0;\r\n    runButton.innerText = \"Run\";\r\n    filePicker.disabled = false;\r\n    singleStepButton.disabled = false;\r\n    frameStepButton.disabled = false;\r\n    assembleButton.disabled = false;\r\n    update();\r\n}\r\n\r\ncanvas.width = screenWidth;\r\ncanvas.height = screenHeight;\r\nsystem.reset();\r\nupdate();\r\n\r\nfilePicker.onchange = pe => {\r\n    if (!running) {\r\n        let file = pe.target.files[0];\r\n        if (file !== null) {\r\n            var reader = new FileReader();\r\n            reader.readAsArrayBuffer(file);\r\n\r\n            reader.onload = re => {\r\n                let content = re.target.result;\r\n                let bytes = new Uint8Array(content);\r\n                if (system.load_program(0, bytes)) {\r\n                    update_memory_view();\r\n                } else {\r\n                    // TODO:\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\nrunButton.onclick = () => {\r\n    toggle_run();\r\n};\r\n\r\nsingleStepButton.onclick = () => {\r\n    if (!running) {\r\n        system.clock(1);\r\n        update();\r\n    }\r\n};\r\n\r\nframeStepButton.onclick = () => {\r\n    if (!running) {\r\n        system.clock_frame();\r\n        update();\r\n    }\r\n};\r\n\r\nresetButton.onclick = () => {\r\n    pause();\r\n    system.reset();\r\n};\r\n\r\nassembleButton.onclick = () => {\r\n    if (!running) {\r\n        term.clear();\r\n        let output = system.assemble(codeEditor.getValue());\r\n        term.write(output);\r\n        update_memory_view();\r\n    }\r\n};\r\n\r\nfunction resize() {\r\n    memoryScrollArea.style.height = Math.max(200, (window.innerHeight - memoryView.offsetHeight - registerView.offsetHeight - controls.offsetHeight - 10)) + \"px\";\r\n    document.getElementById(\"code_editor\").style.height = Math.max(200, (document.documentElement.clientHeight - assemblerOutput.clientHeight - 16)) + \"px\";\r\n\r\n    // Position the VGA output correctly.\r\n    let canvas_width = Math.max(screenWidth, document.documentElement.clientWidth - mainRight.offsetWidth - mainEditor.offsetWidth - 16);\r\n    let canvas_height = Math.max(screenHeight, document.documentElement.clientHeight - terminalParent.clientHeight - 16);\r\n    let scaleX = canvas_width / screenWidth;\r\n    let scaleY = canvas_height / screenHeight;\r\n    let scale = Math.min(scaleX, scaleY);\r\n    let offsetX = (canvas_width - (screenWidth * scale)) / 2;\r\n    let offsetY = (canvas_height - (screenHeight * scale)) / 2;\r\n    canvas.style.transform = `translate(${offsetX}px, ${offsetY}px) scale(${scale}, ${scale})`;\r\n}\r\n\r\nonresize = () => {\r\n    resize();\r\n};\r\n\r\nfunction renderLoop(now) {\r\n    if (currentTime === undefined) {\r\n        currentTime = now;\r\n    }\r\n\r\n    if (running) {\r\n        elapsed += now - currentTime;\r\n\r\n        if ((elapsed / millisecondsPerFrame) >= 5) {\r\n            // Lag, don't try to catch up because that lags even more.\r\n            elapsed = 0;\r\n        }\r\n\r\n        const needs_update = elapsed >= millisecondsPerFrame;\r\n\r\n        while (elapsed >= millisecondsPerFrame) {\r\n            elapsed -= millisecondsPerFrame;\r\n\r\n            let breakPoint = system.clock_frame();\r\n            if (breakPoint) {\r\n                pause();\r\n            }\r\n        }\r\n\r\n        if (needs_update) {\r\n            update();\r\n        }\r\n    }\r\n\r\n    currentTime = now;\r\n    requestAnimationFrame(renderLoop);\r\n};\r\n\r\nresize();\r\nrequestAnimationFrame(renderLoop);\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);